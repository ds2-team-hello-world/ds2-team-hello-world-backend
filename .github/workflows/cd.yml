name: Backend CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Create .env file for dev
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "DB_USER=${{ secrets.DB_USER_DEV }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD_DEV }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME_DEV }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST_DEV }}" >> .env
          echo "KEYCLOAK_URL=${{ secrets.KEYCLOAK_URL_DEV }}" >> .env
          echo "KEYCLOAK_REALM=${{ secrets.KEYCLOAK_REALM_DEV }}" >> .env
          echo "KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID_DEV }}" >> .env
          echo "KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET_DEV }}" >> .env
        working-directory: ./app

      - name: Create .env file for prod
        if: github.ref == 'refs/heads/main'
        run: |
          echo "DB_USER=${{ secrets.DB_USER_PROD }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD_PROD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME_PROD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST_PROD }}" >> .env
          echo "KEYCLOAK_URL=${{ secrets.KEYCLOAK_URL_PROD }}" >> .env
          echo "KEYCLOAK_REALM=${{ secrets.KEYCLOAK_REALM_PROD }}" >> .env
          echo "KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID_PROD }}" >> .env
          echo "KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET_PROD }}" >> .env
        working-directory: ./app

      - name: Build and push Docker images
        run: |
          docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/backend-service:${{ github.sha }} ./app
          docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/configure-keycloak:${{ github.sha }} ./keycloak
        working-directory: .

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'

      - name: Install gke-gcloud-auth-plugin
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          curl -sSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Authenticate to GKE
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT }}
          gcloud config set compute/zone ${{ secrets.GKE_ZONE }}
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Verify connection
        run: kubectl get nodes

      - name: Create prod namespace
        if: github.ref == 'refs/heads/main'
        run: |
          kubectl create namespace prod || echo "Namespace prod already exists"

      - name: Create dev namespace
        if: github.ref == 'refs/heads/dev'
        run: |
          kubectl create namespace dev || echo "Namespace dev already exists"

      - name: Create Secrets for Development
        if: github.ref == 'refs/heads/dev'
        run: |
          kubectl create secret generic backend-secret --from-env-file=./app/.env --dry-run=client -o yaml | kubectl apply -f - -n dev

      - name: Create Secrets for Production
        if: github.ref == 'refs/heads/main'
        run: |
          kubectl create secret generic backend-secret --from-env-file=./app/.env --dry-run=client -o yaml | kubectl apply -f - -n prod

      - name: Deploy to Development
        if: github.ref == 'refs/heads/dev'
        env:
          BACKEND_IMAGE_TAG: ${{ secrets.DOCKER_USERNAME }}/backend-service:${{ github.sha }}
          KEYCLOAK_CONFIG_IMAGE_TAG: ${{ secrets.DOCKER_USERNAME }}/configure-keycloak:${{ github.sha }}
        run: |
          kubectl delete job configure-keycloak -n dev || true
          kubectl apply -k k8s/overlays/dev 
          kubectl set image deployment/backend backend=${{ secrets.DOCKER_USERNAME }}/backend-service:${{ github.sha }} -n dev

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        env:
          BACKEND_IMAGE_TAG: ${{ secrets.DOCKER_USERNAME }}/backend-service:${{ github.sha }}
          KEYCLOAK_CONFIG_IMAGE_TAG: ${{ secrets.DOCKER_USERNAME }}/configure-keycloak:${{ github.sha }}
        run: |
          kubectl delete job configure-keycloak -n prod || true
          kubectl apply -k k8s/overlays/prod
          kubectl set image deployment/backend backend=${{ secrets.DOCKER_USERNAME }}/backend-service:${{ github.sha }} -n prod
